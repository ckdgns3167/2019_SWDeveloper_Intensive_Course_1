<<19.08.06기록>>

1. <<<<해결>>>>로그인 사용자 타입이 일반유저 일 때는 메인 화면에서 마이페이지버튼이 visible 해야하고
   관리자이면 마이페이지 대신 회원 관리 버튼이 visible 되도록 해야 겠다. 그러면 회원 관리 페이지도
   필요하겠네? 회원 관리 페이지에서는 간단하게 모든 회원 정보를 테이블로 정리해서 보이도록 하는 정도
   만 하자.
---------------------------------------------------------------------------------------
2. <<<<해결>>>>회원 탈퇴 기능 넣자. 사용자가 직접 탈퇴 버튼을 누르고 탈퇴할 수 있다록 ...
   탈퇴하기 버튼을 누르면 정말 할거냐고 물어보고 또 할거라고하면 비번 입력해서 맞으면 삭제 되도록하자.
   회원정보수정 창, 회원 탈퇴 동의창, 회원탈퇴 비밀번호 적는 창 수정하기, 탈퇴하기 버튼 추가 해야함.
	 =>로직은 완벽하지만 새 창이 아애 새로뜨는거 수정하기 
---------------------------------------------------------------------------------------
3. <<<<해결>>>> 회원 수정 기능 넣자. 수정하기 버튼을 누르면 수정할 수 있도록 하는 팝업창이 뜬다 거기엔 form으로 
	구성되어있다. 변경시킬 항목에 입력할 때 유효성 검사를 할 것이다. onchange를 사용하여 text에 있는 것이 변경됨을 감지하고 
	조금이라도 전에 것이랑 다르다면 유효성검사를 진행하고 통과하면 수정완료 버튼을 누를 수 있다. 
	변경시키고 싶은 항목만 입력해서 수정하기하면 된다. 굳이 다 채울 필요가 없다. 
---------------------------------------------------------------------------------------
4. <<<<해결>>>>마이페이지 사용자 정보 다보이도록 연결 시키는 작업도 해야함. UserDAO getXXX함수들 작성
   그리고 정보들 하나씩 얻고 session에 넣어주기	..phone, point, grade,sex, name정도 추가
   ==>하나씩 만드려다보니 너무 비슷한 코드가 많아지므로 하나의 함수로 모든걸 처리할 수 있도록 하는
      함수 만들었음. (UserDAO의 getProperty()) 
   
   그리고 메인화면에서 로그인을 해야 마이페이지가 보이도록 해야함 꼮! 
   로그인안했을 댄 로그인 버튼이... 로그인했을 때는 로그아웃 버튼이 visible!!!!
   
---------------------------------------------------------------------------------------
5. <<<<해결>>>>팝업창 위치 어떤 모니터에서 실행시키던 정가운데로 팝업 되도록 해놨음 또한, 적절한 팝업창 크기지정해뒀음
   ==> 회원가입 폼에서 아이디 중복검사 팝업창, 회원탈퇴, 회원 정보수정 팝업창들 정가운데로 ... 
---------------------------------------------------------------------------------------   
6. <<<<해결>>>>팝업창(수정하기,회원탈퇴)이 역할을 다하고 close될 때, 부모창이 reload되게 하거나 replace되도록 해야함.
	흐름이 허접해보이지 않도록 ...						
---------------------------------------------------------------------------------------								
									<<수정된 파일>>
Login_process2.jsp
UserDAO.java
---------------------------------------------------------------------------------------
									<<추가된 파일>>
//마이페이지
Mypage.jsp

//수정버튼
UserInfoModify.jsp
UserInfoModify_process2.jsp
UserInfoModify_reConfirm.jsp

//회원탈퇴버튼
UserWithdrawal.jsp
UserWithdrawal_process2.jsp
UserWithdrawalSuccess.jsp
---------------------------------------------------------------------------------------
									<<추가된 SQL문>>
1. ON DELETE CASCADE 조건 추가했음. 회원 탈퇴시 다 DELETE 되도록 하기 위해.
--제약조건 DROP
ALTER TABLE COMMENTT DROP CONSTRAINT FK_COMMENT_USERNO;
ALTER TABLE COMMENTT DROP CONSTRAINT FK_COMMENT_POSTNO;
ALTER TABLE POSTT DROP CONSTRAINT FK_POSTT_USERNO;
ALTER TABLE PAYRECORDT DROP CONSTRAINT FK_PAYRECORD_USERNO;
--새로운 제약 조건으로 대체
ALTER TABLE commentt ADD CONSTRAINT FK_COMMENT_USERNO FOREIGN KEY(userNo) REFERENCES usert(userNo) ON DELETE CASCADE;
ALTER TABLE commentt ADD CONSTRAINT FK_COMMENT_POSTNO FOREIGN KEY(postNo) REFERENCES postt(postNo) ON DELETE CASCADE;
ALTER TABLE postt ADD CONSTRAINT FK_POST_USERNO FOREIGN KEY(userNo) REFERENCES usert(userNo) ON DELETE CASCADE;
ALTER TABLE payrecordt ADD CONSTRAINT FK_PAYRECORDT_USERNO FOREIGN KEY(userNo) REFERENCES usert(userNo) ON DELETE CASCADE;
---------------------------------------------------------------------------------------